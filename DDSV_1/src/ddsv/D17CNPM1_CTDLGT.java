/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ddsv;

import Controller.D17CNPM1_CTDLGT_Controller;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.JOptionPane;
import model.Class_model;

/**
 *
 * @author ADMIN
 */
public class D17CNPM1_CTDLGT extends javax.swing.JFrame {

    private LichHoc lichHocFrame;
    private DefaultTableModel model;
    private D17CNPM1_CTDLGT_Controller lop1;

    /**
     * Creates new form D17CNPM1_CTDLGT
     */

    public D17CNPM1_CTDLGT(ddsv.LichHoc lichHocFrame) {
        this.lichHocFrame = lichHocFrame;
        initComponents();
        // Khởi tạo model cho JTable
        model = (DefaultTableModel) jTable1.getModel();

        model.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                int row = e.getFirstRow();
                int col = e.getColumn();

                // Kiểm tra nếu cột "Vắng" thay đổi (cột cuối cùng)
                if (col == 9) {  // Cột "Vắng" có chỉ số là 9
                    Boolean isAbsent = (Boolean) model.getValueAt(row, col);

                    // Kiểm tra giá trị có phải null hay không
                    if (isAbsent == null) {
                        return; // Nếu null, không làm gì cả
                    }

                    Integer soTietNghi = (Integer) model.getValueAt(row, 5); // Số tiết nghỉ (cột 5)
                    Integer soTiet = (Integer) model.getValueAt(row, 8); // Số tiết (cột 8)
                    Integer soTinChi = (Integer) model.getValueAt(row, 4); // Số tín chỉ (cột 4)

                    // Kiểm tra nếu các giá trị này là null thì gán giá trị mặc định là 0
                    if (soTietNghi == null) {
                        soTietNghi = 0;
                    }
                    if (soTiet == null) {
                        soTiet = 0;
                    }
                    if (soTinChi == null) {
                        soTinChi = 0;
                    }

                    // Cập nhật số tiết nghỉ
                    if (isAbsent) {
                        soTietNghi += soTiet; // Cộng thêm số tiết vào số tiết nghỉ
                    } else {
                        soTietNghi -= soTiet; // Giảm số tiết nghỉ khi không vắng
                    }

                    // Cập nhật lại cột "Số tiết nghỉ"
                    model.setValueAt(soTietNghi, row, 5);

                    // Tính tỷ lệ nghỉ mới: (Số tiết nghỉ / (Số tín chỉ * 15)) * 100
                    float tiLeNghi = 0;
                    if (soTinChi != 0) { // Đảm bảo không chia cho 0
                        tiLeNghi = ((float) soTietNghi / (soTinChi * 15)) * 100;
                    }

                    // Cập nhật cột "Số % nghỉ"
                    model.setValueAt(tiLeNghi, row, 6); // Cột "Số % nghỉ" (cột 6)
                }
            }
        });

    }

    private D17CNPM1_CTDLGT() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    public void updateDataToAllRows(String ngayHoc, int soTiet, String tenLop, String tenMon) {
        model.setRowCount(0);
        try {
            lop1 = new D17CNPM1_CTDLGT_Controller();
            for (Class_model l1 : lop1.getDS(tenLop, tenMon)) { // Gọi getDS với tên lớp và tên môn
                Object[] row = new Object[]{
                    l1.getMaSinhVien(), l1.getHoTen(), l1.getLopHoc(), l1.getMonHoc(),
                    l1.getSoTinChi(), l1.getSoTietNghi(), l1.getTiLeNghi(), ngayHoc, soTiet
                };
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(D17CNPM1_CTDLGT.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sinh viên", "Họ và tên", "Lớp", "Môn học", "Số tín chỉ", "Số tiết nghỉ", "Số % nghỉ", "Ngày", "Số tiết", "Vắng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Lưu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // Lưu dữ liệu vào cơ sở dữ liệu khi nhấn nút "Lưu"
        try {
            // Duyệt qua tất cả các dòng trong bảng
            for (int i = 0; i < model.getRowCount(); i++) {
                Integer maSinhVien = Integer.parseInt((String) model.getValueAt(i, 0));
                String tenLop = (String) model.getValueAt(i, 2);
                String tenMon = (String) model.getValueAt(i, 3);
                Integer soTietNghi = (Integer) model.getValueAt(i, 5);  // Số tiết nghỉ (cột 5)
                Float tiLeNghi = (Float) model.getValueAt(i, 6);        // Tỷ lệ nghỉ (cột 6)
                String ngayNghi = (String) model.getValueAt(i, 7);      // Ngày nghỉ (cột 7)
                Boolean vang = (Boolean) model.getValueAt(i, 9);        // Giá trị "Vắng" (cột 4)

                lop1.Luu_ttdd(maSinhVien, tenLop, tenMon, soTietNghi, tiLeNghi, ngayNghi, vang);
            }

            lichHocFrame.deleteSelectedRowFromTable();

            // Thông báo lưu thành công
            JOptionPane.showMessageDialog(this, "Dữ liệu đã được lưu thành công!");
        } catch (SQLException ex) {
            // Xử lý lỗi khi lưu dữ liệu
            JOptionPane.showMessageDialog(this, "Lỗi khi lưu dữ liệu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();
        int selectedColumn = jTable1.getSelectedColumn(); // Lấy chỉ số của cột được nhấp vào

        // Kiểm tra xem hàng có được chọn và cột có phải là cột đầu tiên
        if (selectedRow != -1 && selectedColumn != 9) {
            // Lấy mã sinh viên từ cột đầu tiên của dòng đã chọn
            String maSinhVienString = (String) jTable1.getValueAt(selectedRow, 0);
            String lopHoc = (String) jTable1.getValueAt(selectedRow, 2); // Lấy lớp học
            String monHoc = (String) jTable1.getValueAt(selectedRow, 3); // Lấy môn học

            try {
                // Chuyển đổi mã sinh viên sang kiểu Integer
                int maSinhVien = Integer.parseInt(maSinhVienString);

                // Mở cửa sổ ThongTinSV với mã sinh viên vừa lấy được
                ThongTinSV thongTinSV;
                try {
                    thongTinSV = new ThongTinSV(maSinhVien, lopHoc, monHoc); // Truyền mã sinh viên, lớp học và môn học
                    thongTinSV.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(D17CNPM1_CTDLGT.class.getName()).log(Level.SEVERE, null, ex);
                }

            } catch (NumberFormatException e) {
                System.err.println("Mã sinh viên không hợp lệ: " + maSinhVienString);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(D17CNPM1_CTDLGT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(D17CNPM1_CTDLGT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(D17CNPM1_CTDLGT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(D17CNPM1_CTDLGT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new D17CNPM1_CTDLGT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
